# ==================================
# ExpoPass Environment Configuration
# ==================================

# This is an example file. Copy this to .env and fill in your values.
# DO NOT commit .env file to version control!

# ==================================
# PostgreSQL Database Configuration
# ==================================
POSTGRES_USER=expopass
POSTGRES_PASSWORD=your_secure_database_password_here
POSTGRES_DB=expo_pass

# ==================================
# Backend Configuration
# ==================================

# Database connection (Docker: use service name 'postgres', Local: use 'localhost')
DB_HOST=postgres
DB_PORT=5432
DB_USERNAME=expopass
DB_PASSWORD=your_secure_database_password_here
DB_NAME=expo_pass

# Application settings
NODE_ENV=production
BACKEND_PORT=3000

# ==================================
# JWT Configuration
# ==================================
# IMPORTANT: Change this to a strong, random secret in production!
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=change_this_to_a_very_long_random_secret_key_in_production
JWT_EXPIRES_IN=7d

# ==================================
# CORS Configuration
# ==================================
# Frontend URL (Docker: http://localhost:8080, Development: http://localhost:5173)
CORS_ORIGIN=http://localhost:8080

# ==================================
# Admin Accounts
# ==================================
# JSON array of admin users with Argon2 hashed passwords
# Generate password hash using: pnpm --filter backend ts-node src/scripts/hash-password.ts
#
# Example format:
# ADMIN_ACCOUNTS=[{"username":"admin","password":"$argon2id$v=19$m=65536,t=3,p=4$..."},{"username":"superadmin","password":"$argon2id$v=19$m=65536,t=3,p=4$..."}]
#
ADMIN_ACCOUNTS=[]

# ==================================
# Development Settings (Optional)
# ==================================
# Uncomment to skip database connection in development
# SKIP_DB=true
