version: '3.8'

services:
  # ============================================
  # PostgreSQL Database Service
  # ============================================
  postgres:
    image: postgres:14-alpine
    container_name: expopass-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-expopass}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-expopass_password}
      POSTGRES_DB: ${POSTGRES_DB:-expo_pass}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - expopass-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-expopass} -d ${POSTGRES_DB:-expo_pass}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # Backend API Service
  # ============================================
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: expopass-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${POSTGRES_USER:-expopass}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-expopass_password}
      DB_NAME: ${POSTGRES_DB:-expo_pass}

      # Application settings
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${BACKEND_PORT:-3000}

      # JWT configuration
      JWT_SECRET: ${JWT_SECRET:-change_this_secret_in_production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}

      # CORS settings
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:8080}

      # Admin accounts
      ADMIN_ACCOUNTS: ${ADMIN_ACCOUNTS:-[]}
    ports:
      - "3000:3000"
    networks:
      - expopass-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============================================
  # Frontend Web Service
  # ============================================
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: expopass-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8080:80"
    networks:
      - expopass-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

# ============================================
# Networks
# ============================================
networks:
  expopass-network:
    driver: bridge

# ============================================
# Volumes
# ============================================
volumes:
  postgres_data:
    driver: local
